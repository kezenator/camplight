/**
 * @file
 *
 * Header for the bbox::http::debug::msgs::DebugReportNotification struct.
 *
 * THIS FILE IS AUTOMATICALLY GENERATED BY THE IDL COMPILER FROM
 * IDL SOURCE FILE "bbox_http_debug_msgs.bbidl"
 */

#ifndef __bbox_http_debug_msgs_DebugReportNotification_H__
#define __bbox_http_debug_msgs_DebugReportNotification_H__

#include <bbox/enc/FromBinary.h>
#include <bbox/enc/FromTextFormat.h>
#include <bbox/enc/MsgTypeLibrary.h>
#include <bbox/enc/ToBinary.h>
#include <bbox/enc/ToTextFormat.h>

namespace bbox {
namespace http {
namespace debug {
namespace msgs {

class DebugReportNotification
{
public:
    DebugReportNotification() = default;
    ~DebugReportNotification() = default;
    DebugReportNotification(const DebugReportNotification&) = default;
    DebugReportNotification(DebugReportNotification&&) = default;
    DebugReportNotification &operator =(const DebugReportNotification&) = default;
    DebugReportNotification &operator =(DebugReportNotification&&) = default;

    void ToBinary(bbox::enc::ToBinary &m) const;
    void FromBinary(bbox::enc::FromBinary &m);
    void ToTextFormat(bbox::enc::ToTextFormat &m) const;
    void FromTextFormat(bbox::enc::FromTextFormat &m);

    bool operator ==(const DebugReportNotification &other) const
    {
        return (contents_html == other.contents_html);
    }

    bool operator !=(const DebugReportNotification &other) const
    {
        return (contents_html != other.contents_html);
    }

    std::string contents_html;

    static bbox::enc::MsgTypeLibrary::Registration<DebugReportNotification> g_msg_registration;
};

} // namespace msgs
} // namespace debug
} // namespace http
} // namespace bbox

#endif // __bbox_http_debug_msgs_DebugReportNotification_H__
