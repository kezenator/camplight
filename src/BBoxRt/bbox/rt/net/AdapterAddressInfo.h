/**
 * @file
 *
 * Header for the bbox::rt::net::AdapterAddressInfo struct.
 *
 * THIS FILE IS AUTOMATICALLY GENERATED BY THE IDL COMPILER FROM
 * IDL SOURCE FILE "bbox_rt_net.bbidl"
 */

#ifndef __bbox_rt_net_AdapterAddressInfo_H__
#define __bbox_rt_net_AdapterAddressInfo_H__

#include <bbox/enc/FromBinary.h>
#include <bbox/enc/FromTextFormat.h>
#include <bbox/enc/MsgTypeLibrary.h>
#include <bbox/enc/ToBinary.h>
#include <bbox/enc/ToTextFormat.h>

#include <bbox/rt/net/IpAddress.h>

namespace bbox {
namespace rt {
namespace net {

class AdapterAddressInfo
{
public:
    AdapterAddressInfo() = default;
    ~AdapterAddressInfo() = default;
    AdapterAddressInfo(const AdapterAddressInfo&) = default;
    AdapterAddressInfo(AdapterAddressInfo&&) = default;
    AdapterAddressInfo &operator =(const AdapterAddressInfo&) = default;
    AdapterAddressInfo &operator =(AdapterAddressInfo&&) = default;

    void ToBinary(bbox::enc::ToBinary &m) const;
    void FromBinary(bbox::enc::FromBinary &m);
    void ToTextFormat(bbox::enc::ToTextFormat &m) const;
    void FromTextFormat(bbox::enc::FromTextFormat &m);

    bool operator ==(const AdapterAddressInfo &other) const
    {
        return (address == other.address)
            && (broadcast == other.broadcast);
    }

    bool operator !=(const AdapterAddressInfo &other) const
    {
        return (address != other.address)
            || (broadcast != other.broadcast);
    }

    IpAddress address;
    IpAddress broadcast;
};

} // namespace net
} // namespace rt
} // namespace bbox

#endif // __bbox_rt_net_AdapterAddressInfo_H__
